import asyncio
from telegram import Update
from telegram.ext import Application, CommandHandler, ContextTypes

# –í—Å—Ç–∞–≤—å —Å–≤–æ–π —Ç–æ–∫–µ–Ω –∏ –∫–∞–Ω–∞–ª —Å—é–¥–∞
BOT_TOKEN = "7571256577:AAFGCDLSMXqo-6-akUISJlDM4_8wWmwYhVo"  # <-- —Å—é–¥–∞ —Ç–æ–∫–µ–Ω –±–æ—Ç–∞
CHANNEL_USERNAME = "@asdfzxcvasf"  # <-- —Å—é–¥–∞ username –∫–∞–Ω–∞–ª–∞ (—Å @)


# üëá –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–æ–º–∞–Ω–¥—ã /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    user = update.effective_user
    user_id = user.id

    try:
        # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –∫–∞–Ω–∞–ª–µ
        member = await context.bot.get_chat_member(
            chat_id=CHANNEL_USERNAME, user_id=user_id
        )
        status = member.status
        await update.message.reply_text(member)

        if status in ("member", "administrator", "creator"):
            await update.message.reply_text(
                f"–ü—Ä–∏–≤–µ—Ç, {user.first_name}! üëã –°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–¥–ø–∏—Å–∫—É –Ω–∞ –Ω–∞—à –∫–∞–Ω–∞–ª."
            )
        else:
            await update.message.reply_text(
                "üòï –ü–æ—Ö–æ–∂–µ, —Ç—ã –µ—â—ë –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω –Ω–∞ –Ω–∞—à –∫–∞–Ω–∞–ª.\n"
                f"–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–ø–∏—à–∏—Å—å: {CHANNEL_USERNAME}"
            )

    except Exception as e:
        # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–ª—É—á–∞–π, –µ—Å–ª–∏ –±–æ—Ç –Ω–µ –∞–¥–º–∏–Ω –≤ –∫–∞–Ω–∞–ª–µ –∏–ª–∏ –∫–∞–Ω–∞–ª –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        await update.message.reply_text(
            "‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É. "
            "–£–±–µ–¥–∏—Å—å, —á—Ç–æ –±–æ—Ç –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∫–∞–Ω–∞–ª –∫–∞–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä."
        )
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–ø–∏—Å–∫–∏: {e}")


# üëá –¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞

if __name__ == "__main__":
    app = Application.builder().token(BOT_TOKEN).build()
    app.add_handler(CommandHandler("start", start))
    print("ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    app.run_polling()
